
---
- hosts: localhost

  # Stores all output for each run in a timestamped directory.
  # By default, this dir is created in current dir.
  # To change that, provide value for var: run_basedir
  # either here or in inventory file

  tasks:

  - include_role:
      name: create_rundir

  - include_role:
      name: '{{ stats_role }}'
    vars: 
      stats_mode: start
    when: stats_enabled is defined and stats_enabled

  - include_role:
      name: os_rootpods
    vars: 
      action: start
    when: deploy_osrootpods is defined and deploy_osrootpods

  - include_role:
      name: '{{ benchmark_role }}'
    vars: 
      benchmark_mode: prepare

  - include_role:
      name: util_dropcaches
    when: dropcaches_postprepare is defined and dropcaches_postprepare

  - include_role:
      name: '{{ calm_role }}'
    vars: 
      calm_mode: start
    when: calm_enabled is defined and calm_enabled

  - include_role:
      name: '{{ calm_role }}'
    vars: 
      calm_mode: ensure_ready
    when: calm_enabled is defined and calm_enabled

  - pause: 
      prompt: "short pause before benchmark run helps demarcate run phase stats"
      seconds: 30

  - include_role:
      name: '{{ benchmark_role }}'
    vars: 
      benchmark_mode: run

  - include_role:
      name: '{{ benchmark_role }}'
    vars: 
      benchmark_mode: gather

  - include_role:
      name: '{{ calm_role }}'
    vars: 
      calm_mode: gather
    when: calm_enabled is defined and calm_enabled

  - include_role:
      name: '{{ stats_role }}'
    vars: 
      stats_mode: gather
    when: stats_enabled is defined and stats_enabled

  - include_role:
      name: get_envinfo

  - include_role:
      name: '{{ benchmark_role }}'
    vars: 
      benchmark_mode: cleanup

  - include_role:
      name: '{{ calm_role }}'
    vars: 
      calm_mode: stop
    when: calm_enabled is defined and calm_enabled

  - include_role:
      name: os_rootpods
    vars: 
      action: stop
    when: deploy_osrootpods is defined and deploy_osrootpods

  - include_role:
      name: '{{ stats_role }}'
    vars: 
      stats_mode: stop
    when: stats_enabled is defined and stats_enabled

...
