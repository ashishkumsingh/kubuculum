---

- name: create directory for storing output
  file: 
    path: '{{ os_rootpods_dir }}'
    state: directory
  
- name: create yaml from template
  template:
    src: '{{ role_path }}/templates/osrootpods_daemonset.j2'
    dest: '{{ os_rootpods_dir }}/osrootpods_daemonset.yaml'

- name: record command start
  block:
    - shell: 'echo -n "started: {{ os_rootpods_command }} at: " >> {{ os_rootpods_dir }}/command.log.txt'
    - shell: 'date >> {{ os_rootpods_dir }}/command.log.txt'

- name: start pods
  command: 'kubectl create -f {{ os_rootpods_dir }}/osrootpods_daemonset.yaml -n {{ os_rootpods_namespace }}'

# NOTE:
#   checking whether all pods in a daemonset are ready, proved
#   to be a little tricky. Using a sleep for now. 
- name: wait for all pods to start
  command: 'sleep 30'

- name: get all pods
  command: 'kubectl get pods -l {{ os_rootpods_podlabel }} -n {{ os_rootpods_namespace }} --no-headers -o custom-columns=":metadata.name"'
  register: podlist

- name: wait for pods to be ready
  command: 'kubectl wait --for=condition=Ready pod/{{ item }} -n {{ os_rootpods_namespace }} --timeout=300s'
  with_items: "{{ podlist.stdout_lines }}"

- name: record command completion
  block:
    - shell: 'echo -n "completed: {{ os_rootpods_command }} at: " >> {{ os_rootpods_dir }}/command.log.txt'
    - shell: 'date >> {{ os_rootpods_dir }}/command.log.txt'

- name: get pod locations
  shell: 'kubectl get pods -l {{ os_rootpods_podlabel }} -n {{ os_rootpods_namespace }} -o wide >> {{ os_rootpods_dir }}/podlocations.{{ role_name }}.txt'

- name: stop pods
  command: 'kubectl delete -f {{ os_rootpods_dir }}/osrootpods_daemonset.yaml -n {{ os_rootpods_namespace }}'

...
