---

- include_role:
    name: '{{ bench_ycsb_dbrole }}'
  vars:
    db_mode: start

- set_fact:
    tmp_prefix: "mongodb.url='"
    tmp_lsuffix: "{{ bench_ycsb_storename }}?w=0'"
    tmp_rsuffix: "{{ bench_ycsb_storename }}'"
  when: bench_ycsb_dbrole == "db_mongodb"

- set_fact:
    bench_ycsb_db_loadopts: "{{ tmp_prefix + db_mongodb_connurl + tmp_lsuffix }}"
    bench_ycsb_db_runopts: "{{ tmp_prefix + db_mongodb_connurl + tmp_rsuffix }}"
  when: bench_ycsb_dbrole == "db_mongodb"

- name: create directory for storing role output
  file:
    path: '{{ bench_ycsb_dir }}'
    state: directory

- name: create job file from template
  template:
    src: '{{ role_path }}/templates/ycsbprep_job.j2'
    dest: '{{ bench_ycsb_dir }}/ycsbprep_job.yaml'

- name: start pod
  command: 'kubectl create -f {{ bench_ycsb_dir }}/ycsbprep_job.yaml -n {{ bench_ycsb_namespace }}'

- name: get pod name
  command: 'kubectl get pods -l {{ bench_ycsb_preppodlabel }} -n {{ bench_ycsb_namespace }} --no-headers -o custom-columns=":metadata.name"'
  register: podlist

- name: wait for prepare phase completion
  command: 'kubectl wait --for=condition=Ready pod/{{ podlist.stdout }} --namespace={{ bench_ycsb_namespace }} --timeout={{ bench_ycsb_maxtime_sec }}s'

- name: create directory for storing prep pod output
  file: 
    path: '{{ bench_ycsb_dir }}/prepare_{{ podlist.stdout }}'
    state: directory

- name: fetch output from prep pod
  command: 'kubectl cp {{ bench_ycsb_namespace }}/{{ podlist.stdout }}:{{ bench_ycsb_podoutdir }} {{ bench_ycsb_dir }}/prepare_{{ podlist.stdout }}'

- name: delete prep pod
  command: 'kubectl delete -f {{ bench_ycsb_dir }}/ycsbprep_job.yaml -n {{ bench_ycsb_namespace }}'

- include_role:
    name: '{{ bench_ycsb_dbrole }}'
  vars:
    db_mode: flush_caches
    db_storename: '{{ bench_ycsb_storename }}'
  when: bench_ycsb_flushdbcaches

...
