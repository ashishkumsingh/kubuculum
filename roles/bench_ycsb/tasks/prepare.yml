---

- include_role:
    name: '{{ bench_ycsb_dbrole }}'
  vars:
    db_mode: start

- name: create directory for storing role output
  file:
    path: '{{ bench_ycsb_dir }}'
    state: directory

- name: create configmap for benchmark phase transitions
  command: 'kubectl create configmap {{ bench_ycsb_configmap }} --from-literal={{ bench_ycsb_mapkey }}={{ bench_ycsb_initphase }} -n {{ bench_ycsb_namespace }}'

- name: create job file from template
  template:
    src: '{{ role_path }}/templates/ycsb_job.j2'
    dest: '{{ bench_ycsb_dir }}/ycsb_job.yaml'

- name: start pod
  command: 'kubectl create -f {{ bench_ycsb_dir }}/ycsb_job.yaml -n {{ bench_ycsb_namespace }}'

- name: sleep for estimated prepare phase time
  command: 'sleep {{ bench_ycsb_prep_sec }}'

- name: get pod name
  command: 'kubectl get pods -l {{ bench_ycsb_podlabel }} -n {{ bench_ycsb_namespace }} --no-headers -o custom-columns=":metadata.name"'
  register: podlist

# wait for prepwait initContainer that marks end of prepare phase
- name: wait for prepare phase completion
  shell: "kubectl describe pod {{ podlist.stdout }} -n {{ bench_ycsb_namespace }} | grep State: | sed -n {{ bench_ycsb_prepc }}p | awk '{print $2}'"
  register: cs
  until: cs.stdout.find("Running") != -1
  retries: '{{ bench_ycsb_prep_retries }}'
  delay: '{{ bench_ycsb_prepretry_sec }}'

...
